import uid from"tiny-uid";var createFingerprint=()=>`uid::${uid(7)}`,isValidConnectionArgs=(e,n=["endpointName","fingerprint"])=>"object"==typeof e&&null!==e&&n.every((n=>n in e)),encodeConnectionArgs=e=>{if(!isValidConnectionArgs(e))throw new TypeError("Invalid connection args");return JSON.stringify(e)},decodeConnectionArgs=e=>{try{const n=JSON.parse(e);return isValidConnectionArgs(n)?n:null}catch(e){return null}},createDeliveryLogger=()=>{let e=[];return{add:(...n)=>{e=[...e,...n]},remove:n=>{e="string"==typeof n?e.filter((e=>e.message.transactionId!==n)):e.filter((e=>!n.includes(e)))},entries:()=>e}},PortMessage=class{static toBackground(e,n){return e.postMessage(n)}static toExtensionContext(e,n){return e.postMessage(n)}};export{createFingerprint,encodeConnectionArgs,decodeConnectionArgs,createDeliveryLogger,PortMessage};